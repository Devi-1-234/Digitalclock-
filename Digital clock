import tkinter as tk
from time import strftime
import time
import winsound  # For playing sound (Windows only)

class DigitalClock(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Digital Clock")
        self.geometry("400x200")
       
        # Default values
        self.is_24_hour = True  # Start with 24-hour format
        self.is_dark_theme = False  # Start with light theme
        self.alarm_time = None  # No alarm set initially
       
        self.create_widgets()
        self.update_clock()
   
    def create_widgets(self):
        # Time display label
        self.time_label = tk.Label(self, font=("calibri", 40, "bold"), background="white", foreground="black")
        self.time_label.pack(anchor="center", padx=20, pady=30)

        # Date display label
        self.date_label = tk.Label(self, font=("calibri", 15), background="white", foreground="black")
        self.date_label.pack(anchor="center", pady=5)
       
        # Buttons for changing format and theme
        self.toggle_format_btn = tk.Button(self, text="Toggle Time Format (12/24)", command=self.toggle_time_format, font=("calibri", 12))
        self.toggle_format_btn.pack(side="left", padx=20, pady=10)
       
        self.toggle_theme_btn = tk.Button(self, text="Toggle Theme", command=self.toggle_theme, font=("calibri", 12))
        self.toggle_theme_btn.pack(side="left", padx=20, pady=10)

        # Button for setting an alarm
        self.set_alarm_btn = tk.Button(self, text="Set Alarm (HH:MM:SS)", command=self.set_alarm, font=("calibri", 12))
        self.set_alarm_btn.pack(side="left", padx=20, pady=10)

    def toggle_time_format(self):
        """Toggle between 12-hour and 24-hour format"""
        if self.is_24_hour:
            self.is_24_hour = False
        else:
            self.is_24_hour = True
        self.update_clock()
       
    def toggle_theme(self):
        """Toggle between light and dark theme"""
        if self.is_dark_theme:
            self.is_dark_theme = False
        else:
            self.is_dark_theme = True
        self.update_theme()
       
    def update_theme(self):
        """Update the theme based on the toggle"""
        if self.is_dark_theme:
            self.configure(bg="black")
            self.time_label.config(bg="black", fg="white")
            self.date_label.config(bg="black", fg="white")
            self.toggle_format_btn.config(bg="black", fg="white")
            self.toggle_theme_btn.config(bg="black", fg="white")
            self.set_alarm_btn.config(bg="black", fg="white")
        else:
            self.configure(bg="white")
            self.time_label.config(bg="white", fg="black")
            self.date_label.config(bg="white", fg="black")
            self.toggle_format_btn.config(bg="white", fg="black")
            self.toggle_theme_btn.config(bg="white", fg="black")
            self.set_alarm_btn.config(bg="white", fg="black")
   
    def update_clock(self):
        """Update the clock display with time and date"""
        if self.is_24_hour:
            time_format = "%H:%M:%S"
        else:
            time_format = "%I:%M:%S %p"
       
        current_time = strftime(time_format)
        current_date = time.strftime("%A, %B %d, %Y")
       
        self.time_label.config(text=current_time)
        self.date_label.config(text=current_date)
       
        # Check if alarm time is set and matches the current time
        if self.alarm_time and current_time == self.alarm_time:
            self.trigger_alarm()
       
        # Call update_clock every 1000ms (1 second) to keep it updating
        self.after(1000, self.update_clock)
   
    def set_alarm(self):
        """Set an alarm time (HH:MM:SS)"""
        alarm_input = tk.simpledialog.askstring("Set Alarm", "Enter time for alarm (HH:MM:SS):")
        if alarm_input:
            self.alarm_time = alarm_input
            print(f"Alarm set for {self.alarm_time}")

    def trigger_alarm(self):
        """Trigger alarm sound when the set alarm time is reached"""
        # Play a sound when the alarm time is reached
        print("ALARM! Time's up!")
        winsound.Beep(1000, 1000)  # Beep sound (Windows-only)
        self.alarm_time = None  # Reset alarm after it goes off

# Run the Digital Clock App
if __name__ == "__main__":
    import tkinter.simpledialog  # For input dialog to set alarm
    clock = DigitalClock()
    clock.mainloop()
